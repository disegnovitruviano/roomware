#  RRR                     W   W
#  R  R   OO   OO  M   M   W   W  AA  RR  EEE
#  RRR   O  O O  O MM MM    W W  A  A R R EE
#  R  R  O  O O  O M M M    WWW  AAAA RR  E
#  R   R  OO   OO  M   M    W W  A  A R R EEE - configuration file
#
#
# I N T R O D U C T I O N
#
# Welcome to the RoomWare Server configuration file! You are only a few
# moments away from your own RoomWare Installation!
#
# For now good luck, and read this file. Maybe it looks a bit hard, but
# I hope you'll manage to tackle it - this is what I really mean, it says
# it is ohw so easy, but I can remember myself editing configuration files
# many times and still not get it to work...
#
#
# It is supposed to be _super_ easy to enable more modules or communicators.
# I'll show you how it is done.
#
# As you can see, and probably are used to, the '#' indicates remarks. If you
# are going to configure a module or communicator. Don't start with it!
#
#
# C O M M U N I C A T O R S
#
# The communicators are exactly behaving as the definitions for the modules,
# so I didn't have an extra help for them.
#
#
#
# M O D U L E S
#
# First, you must define a name for every instance of a module to be loaded.
#
#
# CHOOSE NAME - MUST BE UNIQUE
#
# Please don't do weird stuff like '@#%asfli_@#%235=3' because that is maybe
# not working on your system... Sorry for that... Ohww... I am not...
#
# Choose a name. This is the name for an instance of the module, eg 'siwa'.
# All options passed to the module will start with 'siwa-'.
#
#
# CLASS OPTION - ONLY MANDATORY OPTION
#
# There is only 1 mandatory option: the class option. We need to know which
# class describes your module. You should give the complete classname.
# Thus <pacakge>.<class>. If you use the normal settings, it will be:
#
# <modulename>.Module
#
# Our 'siwa' module will be requires this. It would look like:
#
#siwa-class:	foomodule.Module
#
#
# PARAMETERS - AS MANY AS DESIRED
#
# That is really all you have to do. But if you want to pass options, you
# name the key: <name>-<optionname>: <option value>. So if we want to
# pass the message 'Hello, World!' to our 'siwa' module you have to type:
#
#siwa-message:	Hello, World!
#
#
#
# S E R V E R
#
# Now you already know all the hard stuff. The only thing to be done is
# passing all your well thought out communicator(s) and module(s) names to
# the server.
#
# Well it could offcourse see which names you have defined, but it doesn't
# know the difference between modules and communicators yet. There for
# _you_ must do this.
#
# You specify the modules with the 'modules' key. Simply list them all
# as a comma seperate list.
#
#modules:	blue
#
# Now we do the same for the communicators
#
#communicators:	console, http
#
# The default configuration doesn't contain any modules or communicators
# and thus we have:
modules: 
communicators: 
#
#
# If you managed to get here, you have become a roomware server configuraion
# expert.
#
#
# New feature of the roomware server. Now by default syntax errors in this file
# the server will crash. This makes you make no errors in this file. You can
# adjust this behaviour with the stop-on-error value.
#
# stop-on-error: 'false' || 'true'
#
stop-on-error:	true
